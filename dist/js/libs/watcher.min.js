import{isMobile,uniqArray,FLS}from"../files/functions.js";import{flsModules}from"../files/modules.js";class ScrollWatcher{constructor(t){this.config=Object.assign({logging:!0},t),this.observer,!document.documentElement.classList.contains("watcher")&&this.scrollWatcherRun()}scrollWatcherUpdate(){this.scrollWatcherRun()}scrollWatcherRun(){document.documentElement.classList.add("watcher"),this.scrollWatcherConstructor(document.querySelectorAll("[data-watch]"))}scrollWatcherConstructor(t){if(t.length){this.scrollWatcherLogging(`Проснулся, слежу за объектами (${t.length})...`),uniqArray(Array.from(t).map((function(t){return`${t.dataset.watchRoot?t.dataset.watchRoot:null}|${t.dataset.watchMargin?t.dataset.watchMargin:"0px"}|${t.dataset.watchThreshold?t.dataset.watchThreshold:0}`}))).forEach((r=>{let e=r.split("|"),s={root:e[0],margin:e[1],threshold:e[2]},a=Array.from(t).filter((function(t){let r=t.dataset.watchRoot?t.dataset.watchRoot:null,e=t.dataset.watchMargin?t.dataset.watchMargin:"0px",a=t.dataset.watchThreshold?t.dataset.watchThreshold:0;if(String(r)===s.root&&String(e)===s.margin&&String(a)===s.threshold)return t})),c=this.getScrollWatcherConfig(s);this.scrollWatcherInit(a,c)}))}else this.scrollWatcherLogging("Сплю, нет объектов для слежения. ZzzZZzz")}getScrollWatcherConfig(t){let r={};if(document.querySelector(t.root)?r.root=document.querySelector(t.root):"null"!==t.root&&this.scrollWatcherLogging(`Эмм... родительского объекта ${t.root} нет на странице`),r.rootMargin=t.margin,!(t.margin.indexOf("px")<0&&t.margin.indexOf("%")<0)){if("prx"===t.threshold){t.threshold=[];for(let r=0;r<=1;r+=.005)t.threshold.push(r)}else t.threshold=t.threshold.split(",");return r.threshold=t.threshold,r}this.scrollWatcherLogging("Ой ой, настройку data-watch-margin нужно задавать в PX или %")}scrollWatcherCreate(t){this.observer=new IntersectionObserver(((t,r)=>{t.forEach((t=>{this.scrollWatcherCallback(t,r)}))}),t)}scrollWatcherInit(t,r){this.scrollWatcherCreate(r),t.forEach((t=>this.observer.observe(t)))}scrollWatcherIntersecting(t,r){t.isIntersecting?(!r.classList.contains("_watcher-view")&&r.classList.add("_watcher-view"),this.scrollWatcherLogging(`Я вижу ${r.classList}, добавил класс _watcher-view`)):(r.classList.contains("_watcher-view")&&r.classList.remove("_watcher-view"),this.scrollWatcherLogging(`Я не вижу ${r.classList}, убрал класс _watcher-view`))}scrollWatcherOff(t,r){r.unobserve(t),this.scrollWatcherLogging(`Я перестал следить за ${t.classList}`)}scrollWatcherLogging(t){this.config.logging&&FLS(`[Наблюдатель]: ${t}`)}scrollWatcherCallback(t,r){const e=t.target;this.scrollWatcherIntersecting(t,e),e.hasAttribute("data-watch-once")&&t.isIntersecting&&this.scrollWatcherOff(e,r),document.dispatchEvent(new CustomEvent("watcherCallback",{detail:{entry:t}}))}}flsModules.watcher=new ScrollWatcher({});